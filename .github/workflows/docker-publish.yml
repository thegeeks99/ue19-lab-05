name: Publish Docker Image to GitHub Packages

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to GitHub Docker registry
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          

      #extract metadata(tags, labels)
      - name: Extract metadata (tags, labels) for Docker
      
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Step 3: Build the Docker image
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      

      # Step 4: Scan Docker image for vulnerabilities with Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.0.2
        with:
          
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
      
      #generate artifact attestation
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
